# Staging Profile Configuration
spring:
  config:
    activate:
      on-profile: staging
  
  # Database configuration for staging
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://staging-db:5432/inventory_db_staging}
    username: ${DATABASE_USERNAME:inventory_user_staging}
    password: ${DATABASE_PASSWORD:inventory_pass_staging}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${DB_MAX_POOL_SIZE:30}
      minimum-idle: ${DB_MIN_IDLE:5}
      idle-timeout: ${DB_IDLE_TIMEOUT:300000}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:20000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      leak-detection-threshold: ${DB_LEAK_DETECTION_THRESHOLD:60000}
      pool-name: InventoryHikariPool-Staging

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  # Redis configuration for staging
  redis:
    host: ${REDIS_HOST:staging-redis}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:1}
    timeout: ${REDIS_TIMEOUT:2000ms}
    lettuce:
      pool:
        max-active: ${REDIS_MAX_ACTIVE:20}
        max-idle: ${REDIS_MAX_IDLE:10}
        min-idle: ${REDIS_MIN_IDLE:5}

  cache:
    type: redis
    redis:
      time-to-live: ${CACHE_TTL:1800000} # 30 minutes

# Server configuration for staging
server:
  port: ${SERVER_PORT:8080}

# Management endpoints for staging
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops,loggers
      cors:
        allowed-origins: ${ACTUATOR_CORS_ORIGINS:http://localhost:3000,https://staging.inventory.com}
  endpoint:
    health:
      show-details: always
    env:
      enabled: true
      show-values: when-authorized
    configprops:
      enabled: true
      show-values: when-authorized
    loggers:
      enabled: true

# Staging logging configuration
logging:
  level:
    com.ecommerce.inventory: ${LOG_LEVEL_APP:DEBUG}
    org.springframework.security: ${LOG_LEVEL_SECURITY:INFO}
    org.flywaydb: ${LOG_LEVEL_FLYWAY:INFO}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:DEBUG}
    org.springframework.cache: ${LOG_LEVEL_CACHE:DEBUG}
  file:
    name: ${LOG_FILE_PATH:logs/inventory-management-staging.log}
  logback:
    rollingpolicy:
      max-file-size: ${LOG_MAX_FILE_SIZE:20MB}
      max-history: ${LOG_MAX_HISTORY:30}

# Staging-specific JWT configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:3600000} # 1 hour for staging
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}

# Staging file upload configuration
file:
  upload:
    dir: ${FILE_UPLOAD_DIR:/app/uploads/staging}
    enable-virus-scanning: ${VIRUS_SCANNING_ENABLED:false}
    cloud-storage:
      enabled: ${CLOUD_STORAGE_ENABLED:false}

# Application-specific staging configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://staging.inventory.com}
  
  rate-limiting:
    enabled: ${RATE_LIMITING_ENABLED:false}
  
  monitoring:
    alerts:
      enabled: ${ALERTS_ENABLED:false}