name: Security Scan

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM UTC
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level moderate --json > npm-audit.json || true
          npm audit --audit-level moderate

      - name: Upload npm audit results
        uses: actions/upload-artifact@v3
        with:
          name: npm-audit-results
          path: npm-audit.json

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --json > snyk-results.json
        continue-on-error: true

      - name: Upload Snyk results
        uses: actions/upload-artifact@v3
        with:
          name: snyk-results
          path: snyk-results.json

  code-security-scan:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript"

  docker-security-scan:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [api, web]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ matrix.app }}/Dockerfile
          push: false
          tags: inventory-${{ matrix.app }}:security-scan
          load: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: inventory-${{ matrix.app }}:security-scan
          format: 'sarif'
          output: 'trivy-${{ matrix.app }}.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-${{ matrix.app }}.sarif'

      - name: Run Snyk container scan
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: inventory-${{ matrix.app }}:security-scan
          args: --severity-threshold=high

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

      - name: Run GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  infrastructure-security:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: dockerfile,kubernetes,terraform
          output_format: sarif
          output_file_path: checkov.sarif

      - name: Upload Checkov scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: checkov.sarif

      - name: Run Terrascan
        uses: tenable/terrascan-action@main
        with:
          iac_type: 'docker'
          iac_version: 'v1'
          policy_type: 'docker'
          only_warn: true
          sarif_upload: true

  license-compliance:
    name: License Compliance Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check licenses
        run: |
          npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD' --excludePrivatePackages --json > license-report.json
          cat license-report.json

      - name: Upload license report
        uses: actions/upload-artifact@v3
        with:
          name: license-report
          path: license-report.json

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-security-scan, docker-security-scan, secrets-scan, infrastructure-security, license-compliance]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Generate security summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "Generated on: $(date)" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## Scan Results" >> security-summary.md
          echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> security-summary.md
          echo "- Code Security Scan: ${{ needs.code-security-scan.result }}" >> security-summary.md
          echo "- Docker Security Scan: ${{ needs.docker-security-scan.result }}" >> security-summary.md
          echo "- Secrets Scan: ${{ needs.secrets-scan.result }}" >> security-summary.md
          echo "- Infrastructure Security: ${{ needs.infrastructure-security.result }}" >> security-summary.md
          echo "- License Compliance: ${{ needs.license-compliance.result }}" >> security-summary.md
          
          echo "" >> security-summary.md
          echo "## Artifacts Generated" >> security-summary.md
          echo "- npm-audit-results" >> security-summary.md
          echo "- snyk-results" >> security-summary.md
          echo "- trivy scan results (uploaded to Security tab)" >> security-summary.md
          echo "- license-report" >> security-summary.md

      - name: Upload security summary
        uses: actions/upload-artifact@v3
        with:
          name: security-summary
          path: security-summary.md

      - name: Comment PR with security summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('security-summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Notify on critical vulnerabilities
        if: needs.dependency-scan.result == 'failure' || needs.code-security-scan.result == 'failure'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: 'ðŸš¨ Critical security vulnerabilities detected! Check the security scan results.'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}